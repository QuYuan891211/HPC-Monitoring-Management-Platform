<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nmefc.hpcmmp.dao.management.RoleMapper">
  <resultMap id="BaseResultMap" type="com.nmefc.hpcmmp.entity.management.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <resultMap id="UserMap" type="com.nmefc.hpcmmp.entity.management.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <resultMap id="ActionMap" type="com.nmefc.hpcmmp.entity.management.Action">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="area_name" jdbcType="VARCHAR" property="areaName" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="controller_name" jdbcType="VARCHAR" property="controllerName" />
    <result column="js_function_name" jdbcType="VARCHAR" property="jsFunctionName" />
    <result column="type_enum" jdbcType="INTEGER" property="typeEnum" />
    <result column="menu_icon" jdbcType="VARCHAR" property="menuIcon" />
    <result column="icon_width" jdbcType="INTEGER" property="iconWidth" />
    <result column="icon_height" jdbcType="INTEGER" property="iconHeight" />
    <result column="icon_cls" jdbcType="VARCHAR" property="iconCls" />
    <result column="icon_class_name" jdbcType="VARCHAR" property="iconClassName" />
    <result column="is_show" jdbcType="BIT" property="isShow" />
    <result column="method_type_enum" jdbcType="INTEGER" property="methodTypeEnum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, remark, sort, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.nmefc.hpcmmp.entity.management.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from management_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from management_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from management_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!--根据role的ID删除与user关联表的内容-->
  <delete id="deleteRelativityWithUserByRoleID" parameterType="java.lang.Integer">
    delete from user_role_association
    where rol_id = #{id,jdbcType=INTEGER}
  </delete>
  <!--根据role的ID删除与action关联表的内容-->
  <delete id="deleteRelativityWithActionByRoleID" parameterType="java.lang.Integer">
    delete from role_action_association
    where role_id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nmefc.hpcmmp.entity.management.RoleExample">
    delete from management_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <!--根据role的ID删除role-->
  <delete id="deleteRoleByID" parameterType="java.lang.Integer">
    delete from management_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nmefc.hpcmmp.entity.management.Role">
    insert into management_role (id, name, remark, 
      sort, gmt_create, gmt_modified
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nmefc.hpcmmp.entity.management.Role">
    insert into management_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <!--写入role和action的关系表-->
  <insert id="saveActionRelativity" parameterType="com.nmefc.hpcmmp.entity.management.association.RoleActionAssociation">
    INSERT into role_action_association(role_id,action_id) VALUES (#{roleID},#{actionID})
  </insert>
  <!--写入role和user的关系表-->
  <insert id="saveUserRelativity" parameterType="com.nmefc.hpcmmp.entity.management.association.UserRoleAssociation">
    INSERT into user_role_association(use_id,rol_id) VALUES (#{userID},#{roleID})
  </insert>
  <select id="countByExample" parameterType="com.nmefc.hpcmmp.entity.management.RoleExample" resultType="java.lang.Long">
    select count(*) from management_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update management_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update management_role
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nmefc.hpcmmp.entity.management.Role">
    update management_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nmefc.hpcmmp.entity.management.Role">
    update management_role
    set name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--根据role的ID查找所有与之关联的user-->
  <select id="selectRelateUserByRoleID" parameterType="java.lang.Integer" resultMap="UserMap">
  select
  u.id, u.account, u.password, u.sort, u.remark, u.gmt_create, u.gmt_modified, u.name
  from management_role r
  LEFT JOIN user_role_association ur ON  ur.rol_id = r.id
  LEFT JOIN management_user u ON ur.use_id = u.id WHERE r.id = #{id,jdbcType = INTEGER}
</select>
  <!--根据role的ID查找所有与之关联的Action-->
  <!--,a.area_name,a.method_name,a.controller_name,a.js_function_name,a.type_enum,a.menu_icon,a.icon_width,a.icon_high,a.icon_cls,a.icon_class_name,a.is_show,a.method_type_enum-->
  <select id="selectRelateActionByRoleID" parameterType="java.lang.Integer" resultMap="ActionMap">
  select
  a.id, a.parent_id, a.url, a.sort, a.remark, a.gmt_create, a.gmt_modified, a.name
  from management_role r
  LEFT JOIN role_action_association ra ON  ra.role_id = r.id
  LEFT JOIN management_action a ON ra.action_id = a.id WHERE r.id = #{id,jdbcType = INTEGER}
</select>
  <!--根据name、remark查找role-->
  <select id="searchRoleInfo" parameterType="java.lang.String" resultMap="BaseResultMap">
  select
  *
  from management_role r
  where r.name like #{name,jdbcType = VARCHAR} or r.remark like #{remark,jdbcType = VARCHAR}
</select>

</mapper>